version: "3.9"

services:
  supabase-db:
    image: supabase/postgres:15.8.1.047
    container_name: supabase-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: supabase_password
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    volumes:
      - supabase-data:/var/lib/postgresql/data
      - ./migration/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql:ro

  supabase-api:
    image: postgrest/postgrest:latest
    container_name: supabase-api
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://postgres:supabase_password@supabase-db:5432/postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: supersecretjwtkeymustbeatleast32charslong123!
    ports:
      - "8000:8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  archon-server:
    build:
      context: ./python
      dockerfile: Dockerfile.server
    container_name: archon-server
    ports:
      - "${ARCHON_SERVER_PORT:-8181}:${ARCHON_SERVER_PORT:-8181}"
    environment:
      - SUPABASE_URL=http://supabase-api:8000
      - SUPABASE_SERVICE_KEY=supersecretjwtkeymustbeatleast32charslong123!
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - app-network
    depends_on:
      supabase-api:
        condition: service_healthy

  archon-mcp:
    build:
      context: ./python
      dockerfile: Dockerfile.mcp
    container_name: archon-mcp
    ports:
      - "${ARCHON_MCP_PORT:-8051}:${ARCHON_MCP_PORT:-8051}"
    environment:
      - SUPABASE_URL=http://supabase-api:8000
      - SUPABASE_SERVICE_KEY=supersecretjwtkeymustbeatleast32charslong123!
      - API_SERVICE_URL=http://archon-server:${ARCHON_SERVER_PORT:-8181}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_healthy

  archon-agents:
    profiles:
      - agents
    build:
      context: ./python
      dockerfile: Dockerfile.agents
    container_name: archon-agents
    ports:
      - "${ARCHON_AGENTS_PORT:-8052}:${ARCHON_AGENTS_PORT:-8052}"
    environment:
      - SUPABASE_URL=http://supabase-api:8000
      - SUPABASE_SERVICE_KEY=supersecretjwtkeymustbeatleast32charslong123!
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - app-network
    depends_on:
      supabase-api:
        condition: service_healthy

  archon-frontend:
    build: ./archon-ui-main
    container_name: archon-ui
    ports:
      - "${ARCHON_UI_PORT:-3737}:3737"
    environment:
      - VITE_API_URL=http://${HOST:-localhost}:${ARCHON_SERVER_PORT:-8181}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - HOST=${HOST:-localhost}
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  supabase-data:
