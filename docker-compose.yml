version: "3.9"

services:
  supabase-db:
    image: supabase/postgres:${SUPABASE_DB_VERSION:-15.8.1.047}
    container_name: supabase-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s
    networks:
      - app-network
    volumes:
      - supabase-data:/var/lib/postgresql/data
      - ./migration/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql:ro
      - ./migration/init_roles.sql:/docker-entrypoint-initdb.d/init_roles.sql:ro

  supabase-api:
    image: postgrest/postgrest:${POSTGREST_VERSION:-latest}
    container_name: supabase-api
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

  supabase-meta:
    image: supabase/postgres-meta:${POSTGRES_META_VERSION:-v0.60.5}
    container_name: supabase-meta
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_started
    environment:
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8081:8080"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

  supabase-studio:
    image: supabase/studio:latest
    container_name: supabase-studio
    restart: unless-stopped
    depends_on:
      - supabase-api
      - supabase-meta
    environment:
      SUPABASE_URL: http://supabase-api:8000
      STUDIO_PG_META_URL: http://supabase-meta:8080
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:3000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

  archon-server:
    build:
      context: ./python
      dockerfile: Dockerfile.server
    container_name: archon-server
    ports:
      - "${ARCHON_SERVER_PORT}:${ARCHON_SERVER_PORT}"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      supabase-api:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fs http://localhost:${ARCHON_SERVER_PORT}/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

  archon-mcp:
    build:
      context: ./python
      dockerfile: Dockerfile.mcp
    container_name: archon-mcp
    ports:
      - "${ARCHON_MCP_PORT}:${ARCHON_MCP_PORT}"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_started
    healthcheck:
      test:
        ["CMD-SHELL", "curl -fs http://localhost:${ARCHON_MCP_PORT} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

  archon-agents:
    profiles:
      - agents
    build:
      context: ./python
      dockerfile: Dockerfile.agents
    container_name: archon-agents
    ports:
      - "${ARCHON_AGENTS_PORT}:${ARCHON_AGENTS_PORT}"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      supabase-api:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fs http://localhost:${ARCHON_AGENTS_PORT}/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

  archon-frontend:
    build: ./archon-ui-main
    container_name: archon-ui
    ports:
      - "${ARCHON_UI_PORT}:3737"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:3737 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 180s

networks:
  app-network:
    driver: bridge

volumes:
  supabase-data:
